@charset "UTF-8";
/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/*
Reset with the universal selector en todos los elemento,
en todos los after y en todos los before
*/
*,
*::after,
*::before {
  margin: 0px;
  padding: 0px;
  /* forzamos que todos los elementos hijos del selector universal
    hereden la propiedad, que no es heredable por defecto */
  box-sizing: inherit; }

/* El rem va asociado al root element que es html: 1rem -> 10px*/
html {
  /* font-size: 10px; */
  /* Dado que el default del browser el 16px, si ponemos a pelo la
    fuente el user no es capaz de aumentar la fuente haciendo zoom,
    por tanto lo suyo es usar el porcentaje de la fuente por defecto
    10/16 = 0.625 */
  font-size: 62.5%; }

/*
Overall properties
Fonts inheritance from body to children elements
Text color
*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  /* padding: 30px; */
  padding: 1.6rem;
  /*
    Cambia el modo para que el total-width o total-hight 
    ocupe el ancho/alto que indicamos, no eso mas padding
    mas margen
    */
  box-sizing: border-box; }

.header {
  /*
    Every point should be 95% of height
    */
  height: 95vh;
  /*
    linear-gradient tiene parametros para dirigir el gradiente a direcciones
    */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /*
    Whatever the width should fit in box  
    */
  background-size: cover;
  background-position: top;
  position: relative;
  /*
    used to hide some parts of elements and show other parts
    Coordenadas de elementos que queremos estar visibles
    */
  clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%); }

.header__logo-box {
  position: absolute;
  /*
    La referencia esta en el parent element <header>
    El parent es relativo
    */
  /* top: 40px; */
  top: 4rem;
  /* left: 40px; */
  left: 4rem; }

.header__logo {
  /*
    Si seteamos height width será puesta por el navegador
    */
  /* height: 35px; */
  height: 3.5rem; }

/* .logo:hover {
    animation: moveInLeft 1s ease-out;
} */
/*
Center box con absolute positioning
*/
.header__text-box {
  position: absolute;
  /*
    Situamos la coordenada 0,0 de la caja en el medio del parent
    */
  top: 40%;
  left: 50%;
  /*
    Trasladamos 50% de su propio ancho y alto para que el centro
    de la caja este en el medio del parent
    */
  transform: translate(-50%, -50%);
  /* Dado que el anchor btn es un boton podemos centrarlo usando esta propiedad
    en vez de tocar su posicion */
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Para quitar el shaking de la animacion que es un bug*/
  backface-visibility: hidden;
  /* margin-bottom: 60px; */
  margin-bottom: 6rem; }

/*
block elements ocupan todo el width y tienen salto de linea
*/
.heading-primary--main {
  display: block;
  /* font-size: 60px; */
  font-size: 6rem;
  font-weight: 400;
  /* letter-spacing: 35px; */
  letter-spacing: 3.5rem;
  animation: moveInLeft 1s ease-out;
  /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    */ }

.heading-primary--sub {
  display: block;
  /* font-size: 20px; */
  font-size: 2rem;
  font-weight: 700;
  /* letter-spacing: 17.4px; */
  letter-spacing: 1.7rem;
  animation: moveInRight 1s ease-out;
  /*
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    */ }

/* Animacion con KeyFrames */
@keyframes moveInLeft {
  /* Porcentajes de la animacion en el tiempo */
  0% {
    /* Al inicio que sean invisibles */
    opacity: 0%;
    /* Animacion en el eje x desde la izquierda */
    /* transform: translateX(-100px); */
    transform: translateX(-10rem); }
  /* 60% {
        transform: rotate(180deg);
    } */
  80% {
    /* transform: translateX(10px); */
    transform: translateX(1rem); }
  100% {
    /* Al final que se vean */
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  /* Porcentajes de la animacion en el tiempo */
  0% {
    /* Al inicio que sean invisibles */
    opacity: 0%;
    /* Animacion en el eje x desde la izquierda */
    /* transform: translateX(100px);*/
    transform: translateX(10rem); }
  80% {
    /* transform: translateX(-10px); */
    transform: translateX(-1rem); }
  100% {
    /* Al final que se vean */
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  /* Porcentajes de la animacion en el tiempo */
  0% {
    opacity: 0;
    /* transform: translateY(100px); */
    transform: translateY(10rem); }
  100% {
    /* Al final que se vean */
    opacity: 1;
    transform: translateY(0); } }

/* Pseudo class link to style element under special condition*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  /* padding: 15px 40px; */
  padding: 1.5rem 4rem;
  display: inline-block;
  /* Poniendo un numero grande en el border-radius redondea los bordes independiente del valor*/
  /* border-radius: 100px; */
  border-radius: 10rem;
  /* Apply to all changed properties con la duracion*/
  transition: all .2s;
  /* posicion relativa para que el after se posicione respecto a este */
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  /* Los transform van referidos al estado no inicial no al anterior */
  /* transform: translateY(-3px); */
  transform: translateY(-0.3rem);
  /* offset-x | offset-y | blur-radius | color con 20% de opacidad */
  /* The larger this value, the bigger the blur, so the shadow becomes bigger and lighter */
  /* box-shadow: 0 10px 20px rgba(0, 0, 0, .2); */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  /* Los transform van referidos al estado no inicial no al anterior */
  transform: translateY(-0.1rem);
  /* offset-x | offset-y | blur-radius | color con 20% de opacidad */
  /* box-shadow: 0 5px 10px rgba(0, 0, 0, .2); */
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }

/* after pseudo element añade un elemento "virtual" tras el elemento actual */
/* La idea es poner un botón como el actual mayor y detrás del actual */
.btn::after {
  /* tiene que llevar el atributo content obligatorio aunque sea vacío*/
  content: "";
  /* El after actua como un child del actual */
  display: inline-block;
  width: 100%;
  height: 100%;
  /* border-radius: 100px; */
  border-radius: 10rem;
  /* Posicion absoluta detras */
  position: absolute;
  top: 0px;
  left: 0px;
  /* posicion de los elementos unos encima de otros */
  z-index: -1;
  /* hacer las transiciones del boton en .4s en lugar de instantaneas */
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

/* After only when btn is hover */
.btn:hover::after {
  /* tranformamos en tamaño y fade con la opacidad */
  transform: scaleX(1.5) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom .5s .75s ease-out;
  /* Aplica el 0% de la animacion al inicio no tras el delay */
  animation-fill-mode: backwards; }
